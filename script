# Cargar librerías -------------------------------------------------------------
library(readxl)
library(readr)
library(ggplot2)
library(scales)
library(dplyr)
library(tidyverse)
library(DT)
library(showtext)
library(tibbletime)
library(ggrepel)
library(gt)
library(DT)
library(lubridate)
library(stringi)
library(stringr)

# Exportar bases ---------------------------------------------------------------
setwd("~/IPAS/data/ipas/datos/02_base_limpia")

# Base concentrada
usuarias <- read_excel("usuarias/00_base_usuarias.xlsx") %>% 
  mutate(
    `unidad-desc` = case_when(
      str_detect(`unidad-desc`, "Hospital Zonal General de Agudos Dr. Carlos Bocalandro") ~ "Bocalandro",
      str_detect(`unidad-desc`, "HIGA Dr. Diego Paroissien") ~ "Paroissien",
      str_detect(`unidad-desc`, "HIGA San Mart.n") ~ "San Martín",
      str_detect(`unidad-desc`, "Hospital Zonal General de Agudos General Manuel Belgrano") ~ "Belgrano",
      str_detect(`unidad-desc`, "HIGA Evita de Lan.s") ~ "Lanus",
      str_detect(`unidad-desc`, "HIGA Dr. Jos. Penna") ~ "Penna",
      str_detect(`unidad-desc`, "Hospital Jos. Bernardo Iturraspe") ~ "Iturraspe",
      str_detect(`unidad-desc`, "Hospital Eva Per.n") ~ "Perón",
      str_detect(`unidad-desc`, "Hospital General Dr. Aurelio Valdivieso") ~ "Valdivieso",
      str_detect(`unidad-desc`, "Hospital General Dr. Aurrlio Valdivieso") ~ "Valdivieso",
      str_detect(`unidad-desc`, "Clinica de la Mujer de Oxaca") ~ "Oxaca",
      str_detect(`unidad-desc`, "Hospital General Dr. Aurelio Valvidieso") ~ "Valdivieso",
      str_detect(`unidad-desc`, "Hospital General Dr Aurelio Valdivieso") ~ "Valdivieso",
      str_detect(`unidad-desc`, "Clínica de salud sexual y reproductiva de la Dirección de Unidades Médicas Especializas (DUME)") ~ "DUME",
      
      TRUE ~ `unidad-desc`),
    `lac104-desc`= case_when(
      `lac104-desc`=="Aborto inducido/legal/ILE"~"Aborto inducido/legal/IVE",
      `lac104-desc`=="Atencion post-aborto"~"Atención post-aborto",
    )
  ) %>% 
  filter(`pais-desc`=="Argentina")



setwd("~/IPAS/data/ipas/datos/05_graficos_canvas")
#############################
# Modificar los datos para asegurar que "Lanús" esté asignado a "Buenos Aires"
usuarias <- usuarias %>%
  mutate(`estado-desc` = ifelse(`unidad-desc` == "Lanus", "Buenos Aires", `estado-desc`))

# Agrupar datos y calcular frecuencias
grouped_data <- usuarias %>%
  group_by(`unidad-desc`, `estado-desc`) %>%
  summarise(absoluto = n(), .groups = "drop") %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),
    porcentaje = freq_relativa * 100
  )

# Agregar fila de total
total_row <- grouped_data %>%
  summarise(
    `unidad-desc` = "Total",
    `estado-desc` = "Total",
    absoluto = sum(absoluto),
    freq_relativa = 1,
    porcentaje = 100
  )

grouped_data <- bind_rows(grouped_data, total_row) %>%
  arrange(desc(porcentaje))

# Definir colores para las entidades
grouped_data <- grouped_data %>%
  mutate(color = case_when(
    `estado-desc` == "Buenos Aires" ~ "#38658a",
    `estado-desc` == "Santa Fe" ~ "#655080",
    `estado-desc` == "Total" ~ "#d4712f",
    TRUE ~ "lightgray"
  ))

# Crear el gráfico
ggplot(grouped_data, aes(
  x = reorder(`unidad-desc`, porcentaje),
  y = porcentaje,
  fill = color,
  label = paste0(round(porcentaje, 1), "% \n(", absoluto, ")")
)) +
  geom_col() +
  geom_text(hjust = .5, vjust=-.1) +
  scale_fill_identity() +
  labs(title = NULL, y = "", x = "", fill = "") +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "right",
    axis.text.y = element_text(size = 12, color = "black"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "black"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "black"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "black"), # Título de la leyenda en blanco
    legend.text = element_text(color = "black", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_1

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_1.png", plot = gr_1, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_1
# ------------------------------------------------------------------------------

usuarias %>% 
  group_by(grupo_de_edad) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(grupo_de_edad,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_2


usuarias %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",

      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`, grupo_de_edad) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_2) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = grupo_de_edad, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = grupo_de_edad), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # geom_label(aes(label = paste0(absoluto, "\n (", porcentaje, "%)")), 
  #            fill = "white", size = 3.5, show.legend = FALSE) + 
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_2

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_2.png", plot = gr_2, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_2


#-------------------------------------------------------------------------------

usuarias %>% 
  group_by(`lac102-desc`) %>% 
  summarise(absoluto = n(), .groups = "drop") %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`lac102-desc`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_3


usuarias %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      
      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`,`lac102-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_3) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `lac102-desc`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `lac102-desc`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # geom_label(aes(label = paste0(absoluto, "\n (", porcentaje, "%)")), 
  #            fill = "white", size = 3.5, show.legend = FALSE) + 
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_3

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_3.png", plot = gr_3, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_3



#-------------------------------------------------------------------------------

usuarias %>% 
  group_by(`lac103-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`lac103-desc`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_4


usuarias %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      
      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`, `lac103-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_4) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `lac103-desc`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `lac103-desc`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # geom_label(aes(label = paste0(absoluto, "\n (", porcentaje, "%)")), 
  #            fill = "white", size = 3.5, show.legend = FALSE) + 
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_4

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_4.png", plot = gr_4, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_4





#-------------------------------------------------------------------------------

usuarias %>% 
  group_by(`lac104-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`lac104-desc`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_5


usuarias %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      
      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`, `lac104-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_5) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `lac104-desc`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `lac104-desc`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  scale_fill_manual(values = rev(c("Aborto inducido/legal/IVE" = "#7FC97F",
                                   "Atención post-aborto" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_5

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_5.png", plot = gr_5, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_5




#-------------------------------------------------------------------------------
# hf-107: ¿Qué tipo de procedimiento tuvo o comenzó el día de hoy?
# Nota para la entrevistadora: 
# Si la mujer indica que tomo pastillas, selecciona ‘Aborto con medicamentos’. 
# Si la mujer indica aspiración, legrado, AMEU, selecciona ‘Aborto instrumental’. 
# Si la mujer indica pastillas e instrumental, sólo se considera instrumental y se siguen los saltos.

usuarias %>% 
  filter(!is.na(`hf107-desc`)) %>% 
  group_by(`hf107-desc`, `hf108-desc`) %>% 
  summarise(absoluto = n())# %>%
  # mutate(
  #   freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
  #   porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  # cbind(`unidad-desc`="Total") %>% 
  # select(`hf107-desc`,`unidad-desc`, absoluto, freq_relativa, porcentaje)

usuarias %>% 
  filter(!is.na(`hf107-desc`)) %>% 
  group_by(`hf107-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`hf107-desc`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_6


usuarias %>% 
  filter(!is.na(`hf107-desc`)) %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`,`hf107-desc`, ) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_6) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `hf107-desc`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `hf107-desc`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#b84f83",
                                   "Aborto instrumental" = "#26bf99"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_6

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_6.png", plot = gr_6, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_6



#-------------------------------------------------------------------------------

usuarias %>% 
  filter(!is.na(`grupo_gestación`)) %>% 
  group_by(grupo_gestación) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`grupo_gestación`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_7


usuarias %>% 
  filter(!is.na(`grupo_gestación`)) %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      
      TRUE ~ `unidad-desc`
    )) %>% 
  group_by(`unidad-desc`,`grupo_gestación`, ) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_7) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `grupo_gestación`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `grupo_gestación`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  scale_fill_manual(values = rev(c("11 semanas o más" = "#6e56bf",
                                   "Menos de 11 semanas" = "#26bf99"))) +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_7

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_7.png", plot = gr_7, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_7

# ----------------------------------------------------------

usuarias %>% 
  mutate(grupo_gestación_1 = case_when(
    lac105 >= 0 & lac105 <= 12 ~ "Menos de 13 semanas",
    lac105 >= 13 & lac105 <= 98 ~ "13 semanas o más",
    TRUE ~ "No especificado")) %>% 
  filter(!is.na(`grupo_gestación_1`)) %>% 
  group_by(grupo_gestación_1) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  cbind(`unidad-desc`="Total") %>% 
  select(`grupo_gestación_1`,`unidad-desc`, absoluto, freq_relativa, porcentaje)->argentina_7_1


usuarias %>% 
  mutate(
    `unidad-desc` = case_when(
      `unidad-desc` == "Bocalandro"~ "PBA",
      `unidad-desc` == "Paroissien"~ "PBA",
      `unidad-desc` == "San Martín"~ "PBA",
      `unidad-desc` == "Belgrano"~ "PBA",
      `unidad-desc` == "Lanus"~ "PBA",
      `unidad-desc` == "Penna"~ "PBA",
      `unidad-desc` == "Iturraspe"~ "PSF",
      `unidad-desc` == "Perón"~ "PSF",
      `unidad-desc` == "Valdivieso"~ "PBA",
      
      TRUE ~ `unidad-desc`
    )) %>% 
  mutate(grupo_gestación_1 = case_when(
    lac105 >= 0 & lac105 <= 12 ~ "Menos de 13 semanas",
    lac105 >= 13 & lac105 <= 98 ~ "13 semanas o más",
    TRUE ~ "No especificado")) %>% 
  filter(!is.na(`grupo_gestación_1`)) %>% 
  group_by(`unidad-desc`,`grupo_gestación_1`, ) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  rbind(argentina_7_1) %>% 
  ggplot(aes(x = str_wrap(`unidad-desc`, width = 10), y = porcentaje, fill = `grupo_gestación_1`, label=absoluto)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `grupo_gestación_1`), 
             position = position_fill(vjust = 0.3),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  scale_fill_manual(values = rev(c("13 semanas o más" = "#6e56bf",
                                   "Menos de 13 semanas" = "#26bf99"))) +
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_7_1


# Guardar el gráfico sin fondo
ggsave(filename = "grafico_7_1.png", plot = gr_7_1, bg = "transparent", dpi = 700, width = 10, height = 6)
gr_7_1




#-------------------------------------------------------------------------

usuarias %>% 
  filter(!is.na(`hf107-desc`),
         !is.na(`hf113-desc`)) %>% 
  group_by(`hf107-desc`, `hf113-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`hf107-desc`, width = 10), y = porcentaje, fill = `hf113-desc`, label=`hf113-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `hf107-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_8

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_8.png", plot = gr_8, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_8


###################################################################################
usuarias %>% 
  filter(!is.na(`hf107-desc`),
         !is.na(`hf114a-desc`)) %>% 
  group_by(`hf107-desc`, `hf114a-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`hf107-desc`, width = 10), y = porcentaje, fill = `hf114a-desc`, label=`hf114a-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto, "\n(", porcentaje, "%)"), group = `hf107-desc`), 
             position = position_fill(vjust = 1),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_9

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_9.png", plot = gr_9, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_9

##################################################################################
usuarias %>% 
  filter(!is.na(`hf107-desc`),
         !is.na(`hf115-desc`)) %>% 
  group_by(`hf107-desc`, `hf115-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`hf107-desc`, width = 10), y = porcentaje, fill = `hf115-desc`, label=`hf115-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto,"(", porcentaje, "%)"), group = `hf115-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_10

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_10.png", plot = gr_10, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_10



##################################################################################
usuarias %>% 
  filter(!is.na(`lac104-desc`),
         !is.na(`hf115-desc`)) %>% 
  group_by(`lac104-desc`, `hf115-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = `hf115-desc`, label=`hf115-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto,"(", porcentaje, "%)"), group = `hf115-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol = 4))->gr_11

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_11.png", plot = gr_11, bg = "transparent", dpi = 300, width = 8, height = 6)
gr_11

# --------------------------------


##################################################################################
usuarias %>% 
  filter(!is.na(`lac104-desc`),
         !is.na(`lac106-desc`)) %>% 
  group_by(`lac104-desc`, `lac106-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = `lac106-desc`, label=`lac106-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto,"(", porcentaje, "%)"), group = `lac106-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 3.5, fill = "white", show.legend = FALSE) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.y = element_text(size = 12, color = "black"), # Texto del eje X en blanco
    axis.text.x = element_text(size = 12, color = "black"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "black"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "black"), # Título de la leyenda en blanco
    legend.text = element_text(color = "black", size=14) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =4))->gr_12

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_12.png", plot = gr_12, bg = "transparent", dpi = 300, width = 10, height = 3)
gr_12


##################################################################################
usuarias %>% 
  filter(!is.na(`lac106-desc`),
         !is.na(`hf125-desc`)) %>% 
  group_by(`lac104-desc`, `hf125-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = `hf125-desc`, label=`hf125-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto," (", porcentaje, "%)"), group = `hf125-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 6, fill = "white", show.legend = FALSE, angle=0) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  # coord_flip()+
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.x = element_text(size = 19, color = "black"), # Texto del eje X en blanco
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "black"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "black"), # Título de la leyenda en blanco
    legend.text = element_text(color = "black", size=22) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =4))->gr_13

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_13.png", plot = gr_13, bg = "transparent", dpi = 400, width = 16, height = 6)
gr_13



##################################################################################
usuarias %>% 
  filter(!is.na(`lac106-desc`),
         !is.na(`hf128-desc`)) %>% 
  group_by(`lac104-desc`, `hf128-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = str_wrap(`hf128-desc`,20), label=`hf128-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto," (", porcentaje, "%)"), group = `hf128-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 6, fill = "white", show.legend = FALSE, angle=0) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  # coord_flip()+
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "right",
    axis.text.x = element_text(size = 19, color = "black"), # Texto del eje X en blanco
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "black"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "black"), # Título de la leyenda en blanco
    legend.text = element_text(color = "black", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =1))->gr_14

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_14.png", plot = gr_14, bg = "transparent", dpi = 400, width = 16, height = 6)
gr_14





##################################################################################
usuarias %>% 
  filter(!is.na(`lac106-desc`),
         !is.na(`hf129-desc`)) %>% 
  group_by(`lac104-desc`, `hf129-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = str_wrap(`hf129-desc`,20), label=`hf129-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto," (", porcentaje, "%)"), group = `hf129-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 6, fill = "white", show.legend = FALSE, angle=0) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  # coord_flip()+
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.x = element_text(size = 19, color = "black"), # Texto del eje X en blanco
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "black"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "black"), # Título de la leyenda en blanco
    legend.text = element_text(color = "black", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =4))->gr_15

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_15.png", plot = gr_15, bg = "transparent", dpi = 400, width = 16, height = 6)
gr_15



##################################################################################
usuarias %>% 
  filter(!is.na(`lac106-desc`),
         !is.na(`hf131-desc`)) %>% 
  group_by(`lac104-desc`, `hf131-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = str_wrap(`hf131-desc`,20), label=`hf131-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto," (", porcentaje, "%)"), group = `hf131-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 6, fill = "white", show.legend = FALSE, angle=0) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  # coord_flip()+
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.x = element_text(size = 19, color = "white"), # Texto del eje X en blanco
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =4))->gr_16

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_16.png", plot = gr_16, bg = "transparent", dpi = 400, width = 16, height = 6)
gr_16



##################################################################################
usuarias %>% 
  filter(!is.na(`lac106-desc`),
         !is.na(`hf132-desc`)) %>% 
  group_by(`lac104-desc`, `hf132-desc`) %>% 
  summarise(absoluto = n()) %>%
  mutate(
    freq_relativa = absoluto / sum(absoluto),  # Calcula la frecuencia relativa
    porcentaje = round(freq_relativa * 100, digits = 2)) %>%
  ggplot(aes(x = str_wrap(`lac104-desc`, width = 10), y = porcentaje, fill = str_wrap(`hf132-desc`,20), label=`hf132-desc`)) +  
  geom_col(position = "fill") +  # Barras apiladas al 100%
  geom_label(aes(label = paste0(absoluto," (", porcentaje, "%)"), group = `hf132-desc`), 
             position = position_fill(vjust = 0.5),  # Posición centrada en las barras
             color = "black", size = 6, fill = "white", show.legend = FALSE, angle=0) +
  # scale_fill_manual(values = rev(c("Aborto con medicamentos" = "#7FC97F",
  #                                  "Atencion instrumental" = "#BEAED9"))) +
  
  scale_y_continuous(labels = scales::percent_format(scale = 100)) +  # Eje Y en porcentaje
  labs(title = NULL, y = "", x = "", fill = "") + 
  # coord_flip()+
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    plot.background = element_rect(fill = "transparent", color = NA), # Fondo transparente
    panel.grid = element_blank(),  
    legend.position = "bottom",
    axis.text.x = element_text(size = 19, color = "white"), # Texto del eje X en blanco
    axis.text.y = element_text(size = 12, color = "white"), # Texto del eje X en blanco
    axis.title = element_text(size = 14, color = "white"), # Títulos de los ejes en blanco
    legend.title = element_text(size = 14, color = "white"), # Título de la leyenda en blanco
    legend.text = element_text(color = "white", size=18) # Texto de la leyenda en blanco
  ) +
  guides(fill = guide_legend(ncol =4))->gr_17

# Guardar el gráfico sin fondo
ggsave(filename = "grafico_17.png", plot = gr_17, bg = "transparent", dpi = 400, width = 16, height = 6)
gr_17
